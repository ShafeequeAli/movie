{"version":3,"sources":["ApiKey.js","component/wave.gif","component/nav.js","component/Footer.js","actions/searchActions.js","actions/types.js","component/home/Search.js","component/layout/Spinner.js","component/home/MovieCard.js","component/layout/Nodata.js","component/home/MoviesContainer.js","component/home/Landing.js","reducers/searchReducer.js","reducers/index.js","store.js","component/home/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","nav","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tos","tabindex","aria-disabled","Footer","href","target","rel","setLoading","Search","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","this","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","spinner","src","wave","style","width","margin","display","alt","MovieCard","movie","Poster","Title","Type","Year","imdbID","Nodata","MoviesContainer","flims","content","map","index","key","Landing","loading","Spinner","initState","combineReducers","action","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Movie","fetchMovie","match","params","movieInfo","Plot","scope","imdbRating","Language","Released","Actors","Awards","BoxOffice","Country","DVD","Director","Genre","Metascore","Production","Rated","Runtime","Website","Writer","imdbVotes","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"8FAAAA,EAAOC,QAAU,CACfC,OAAQ,a,mBCDVF,EAAOC,QAAU,IAA0B,kC,6LC0D5BE,MAvDf,WACE,OACE,6BACE,yBAAKC,UAAU,kDACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAAlC,gBAGA,4BACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMP,UAAU,yBAElB,yBACEA,UAAU,oDACVQ,GAAG,aAEH,wBAAIR,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,IAAI,KAA/B,QACO,0BAAMT,UAAU,WAAhB,eAGT,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,IAAI,KAA/B,aAIF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,IAAI,KAA/B,YAIF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,oBACVS,IAAI,IACJC,SAAS,KACTC,gBAAc,QAJhB,kBChBCC,MAxBf,WACE,OACE,yBAAKZ,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,uBAAGA,UAAU,aAAb,6KAKA,uBACEa,KAAK,uBACLC,OAAO,SACPC,IAAI,sBACJf,UAAU,QAJZ,c,8DC0BGgB,EAAa,WACxB,MAAO,CACLd,KCrCmB,YCKVe,EAAb,4MACEC,SAAW,SAACC,GACV,EAAKC,MAAMC,YAAYF,EAAEL,OAAOQ,QAFpC,EAIEC,SAAW,SAACJ,GACVA,EAAEK,iBACF,EAAKJ,MAAMK,YAAY,EAAKL,MAAMM,MAClC,EAAKN,MAAMJ,cAPf,uDAUI,OACE,yBAAKhB,UAAU,OACb,0BAAMA,UAAU,2BAA2BuB,SAAUI,KAAKJ,UACxD,2BACEvB,UAAU,uBACVE,KAAK,SACL0B,YAAY,6BACZrB,aAAW,SACXW,SAAUS,KAAKT,WAEjB,4BACElB,UAAU,uCACVE,KAAK,UAFP,gBApBV,GAA4B2B,aAqCbC,eALU,SAACC,GAAD,MAAY,CACnCL,KAAMK,EAAMC,OAAON,KACnBM,OAAQD,EAAMC,OAAOA,UAGkB,CACvCX,YFzCyB,SAACK,GAAD,OAAU,SAACO,GACpCA,EAAS,CACP/B,KCPwB,eDQxBgC,QAASR,MEuCXD,YFnCyB,SAACC,GAAD,OAAU,SAACO,GACpCE,IACGC,IADH,yCACyCtC,SADzC,cACqD4B,IAClDW,MAAK,SAACC,GACLL,EAAS,CACP/B,KChBoB,eDiBpBgC,QAASI,EAASC,KAAKtB,YAI1BuB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QE0B9BzB,cAHac,CAIZb,G,iBCjCY2B,MAbf,WACE,OACE,yBAAK5C,UAAU,OACb,yBACE6C,IAAKC,IACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDC,IAAI,gBAEN,6CCPOC,EAAb,uKACY,IACAC,EAAU1B,KAAKP,MAAfiC,MACJd,EACF,yBAAKvC,UAAU,aACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QAAQ6C,IAAKQ,EAAMC,OAAQH,IAAI,gBAC9C,yBAAKnD,UAAU,aACb,wBAAIA,UAAU,cAAcqD,EAAME,MAAlC,KACA,gDAAsBF,EAAMG,MAC5B,qDAA2BH,EAAMI,MAEjC,kBAAC,IAAD,CAAMzD,UAAU,kBAAkBC,GAAI,UAAYoD,EAAMK,QAAxD,OAEE,uBAAG1D,UAAU,6BAMvB,OAAO,6BAAMuC,OApBjB,GAA+BV,aAwBhBC,gBAAUsB,GChBVO,EAVf,uKAEI,OACE,6BACE,wBAAI3D,UAAU,sBAAd,oCAJR,GAA4B6B,aCGf+B,EAAb,uKACY,IACAC,EAAUlC,KAAKP,MAAfyC,MAEJC,EAAUD,EACZA,EAAME,KAAI,SAACV,EAAOW,GAAR,OAAkB,kBAAC,EAAD,CAAWX,MAAOA,EAAOY,IAAKD,OAE1D,kBAAC,EAAD,MAGF,OACE,6BACE,yBAAKhE,UAAU,OAAO8D,QAZ9B,GAAqCjC,aAsBtBC,eAJS,SAACC,GAAD,MAAY,CAClC8B,MAAO9B,EAAMC,OAAOA,UAGPF,CAAyB8B,GCrB3BM,EAAb,uKACY,IACAC,EAAYxC,KAAKP,MAAjB+C,QACR,OACE,yBAAKnE,UAAU,aACb,kBAAC,EAAD,MACCmE,EAAU,kBAACC,EAAD,MAAc,kBAAC,EAAD,WANjC,GAA6BvC,aAgBdC,eAJS,SAACC,GAAD,MAAY,CAClCoC,QAASpC,EAAMC,OAAOmC,WAGTrC,CAAyBoC,G,gCCflCG,EAAY,CAChB3C,KAAM,GACNM,OAAQ,GACRmC,SAAS,EACTd,MAAO,ICRMiB,4BAAgB,CAC7BtC,ODUa,WAAsC,IAA5BD,EAA2B,uDAAnBsC,EAAWE,EAAQ,uCAClD,OAAQA,EAAOrE,MACb,IPhBwB,eOiBtB,OAAO,2BACF6B,GADL,IAEEL,KAAM6C,EAAOrC,QACbiC,SAAS,IAEb,IPrBwB,eOsBtB,OAAO,2BACFpC,GADL,IAEEC,OAAQuC,EAAOrC,QACfiC,SAAS,IAEb,IP1BuB,cO2BrB,OAAO,2BACFpC,GADL,IAEEsB,MAAOkB,EAAOrC,QACdiC,SAAS,IAEb,IP/BmB,UOgCjB,OAAO,2BACFpC,GADL,IAEEoC,SAAS,IAEb,QACE,OAAOpC,MEnCPyC,EAAa,CAACC,KASLC,EANDC,sBACZC,EAHgB,GAKhBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCF5BO,EAAb,kLAEIpD,KAAKP,MAAM4D,WAAWrD,KAAKP,MAAM6D,MAAMC,OAAO1E,IAC9CmB,KAAKP,MAAMJ,eAHf,+BAKY,IAAD,EACoBW,KAAKP,MAAxB+C,EADD,EACCA,QAASd,EADV,EACUA,MACb8B,EACF,yBAAKnF,UAAU,eACb,yBAAKA,UAAU,QACb,yBAAK6C,IAAKQ,EAAMC,OAAQtD,UAAU,eAAemD,IAAI,YAEvD,yBAAKnD,UAAU,aACb,wBAAIA,UAAU,cAAcqD,EAAME,OAClC,0CAAgBF,EAAM+B,MACtB,2BAAOpF,UAAU,SACf,4BACE,wBAAIqF,MAAM,OAAV,SAAuBhC,EAAMI,OAE/B,4BACE,wBAAI4B,MAAM,OAAV,eAA6BhC,EAAMiC,aAErC,4BACE,wBAAID,MAAM,OAAV,SAAuBhC,EAAMG,OAE/B,4BACE,wBAAI6B,MAAM,OAAV,aAA2BhC,EAAMkC,WAEnC,4BACE,wBAAIF,MAAM,OAAV,aAA2BhC,EAAMmC,WAEnC,4BACE,wBAAIH,MAAM,OAAV,WAAyBhC,EAAMoC,SAEjC,4BACE,wBAAIJ,MAAM,OAAV,WAAyBhC,EAAMqC,SAEjC,4BACE,wBAAIL,MAAM,OAAV,cAA4BhC,EAAMsC,YAEpC,4BACE,wBAAIN,MAAM,OAAV,YAA0BhC,EAAMuC,UAElC,4BACE,wBAAIP,MAAM,OAAV,QAAsBhC,EAAMwC,MAE9B,4BACE,wBAAIR,MAAM,OAAV,aAA2BhC,EAAMyC,WAEnC,4BACE,wBAAIT,MAAM,OAAV,UAAwBhC,EAAM0C,QAGhC,4BACE,wBAAIV,MAAM,OAAV,cAA4BhC,EAAM2C,YAGpC,4BACE,wBAAIX,MAAM,OAAV,eAA6BhC,EAAM4C,aAErC,4BACE,wBAAIZ,MAAM,OAAV,UAAwBhC,EAAM6C,QAGhC,4BACE,wBAAIb,MAAM,OAAV,YAA0BhC,EAAM8C,UAGlC,4BACE,wBAAId,MAAM,OAAV,YAA0BhC,EAAM+C,UAElC,4BACE,wBAAIf,MAAM,OAAV,WAAyBhC,EAAMgD,SAGjC,4BACE,wBAAIhB,MAAM,OAAV,cAA4BhC,EAAMiD,eAMxC/D,EAAOc,EAAQ8B,EAAY,kBAAC,EAAD,MAC3BrB,EAAUK,EAAU,kBAACC,EAAD,MAAc7B,EACtC,OACE,yBAAKvC,UAAU,qCACZ8D,EACD,6BACE,kBAAC,IAAD,CAAM9D,UAAU,2CAA2CC,GAAG,KAA9D,wBAxFV,GAA2B4B,aAsGZC,eALS,SAACC,GAAD,MAAY,CAClCoC,QAASpC,EAAMC,OAAOmC,QACtBd,MAAOtB,EAAMC,OAAOqB,SAGkB,CAAE2B,WXtFhB,SAACxE,GAAD,OAAQ,SAACyB,GACjCE,IACGC,IADH,yCACyCtC,SADzC,cACqDU,IAClD6B,MAAK,SAACC,GACLL,EAAS,CACP/B,KC5BmB,cD6BnBgC,QAASI,EAASC,UAIrBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QW4EsBzB,cAAvCc,CAAqDiD,GCpFrDwB,MAhBf,WACE,OACE,kBAAC,IAAD,CAAU7B,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAK1E,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IACjC,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,aAAaC,UAAW3B,IAE1C,kBAAC,EAAD,UCRU4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7B,MACvB,2DCZN8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEdhF,OAAM,SAAAiF,GACL/E,QAAQ+E,MAAMA,EAAMC,c","file":"static/js/main.4afaf5ef.chunk.js","sourcesContent":["module.exports = {\r\n  APIKey: \"8299e32e\",\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/wave.4d483a7c.gif\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction nav() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n        <Link className=\"navbar-brand\" to=\"#\">\r\n          Movies Spark\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          className=\"collapse navbar-collapse  nav justify-content-end\"\r\n          id=\"navbarNav\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" tos=\"#\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" tos=\"#\">\r\n                Features\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" tos=\"#\">\r\n                Pricing\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link disabled\"\r\n                tos=\"#\"\r\n                tabindex=\"-1\"\r\n                aria-disabled=\"true\"\r\n              >\r\n                Disabled\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default nav;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"container-flex\">\r\n      <div className=\"card bg-secondary text-white \">\r\n        <div className=\"card-body nav justify-content-center\">\r\n          <p className=\"card-text\">\r\n            For further supporting info about movies arround the world and\r\n            getting the premium access to the movie world you can make a little\r\n            pressure on text you see in blue color\r\n          </p>\r\n          <a\r\n            href=\"https://www.imdb.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"ml-2\"\r\n          >\r\n            Button\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from \"./types\";\r\nimport { APIKey } from \"../../src/ApiKey\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const searchMovie = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const fetchMovies = (text) => (dispatch) => {\r\n  axios\r\n    .get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.data.Search,\r\n      });\r\n    })\r\n\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const fetchMovie = (id) => (dispatch) => {\r\n  axios\r\n    .get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: response.data,\r\n      });\r\n    })\r\n\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING,\r\n  };\r\n};\r\n","export const SEARCH_MOVIE = \"SEARCH_MOVIE\";\r\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\r\nexport const FETCH_MOVIE = \"FETCH_MOVIE\";\r\nexport const LOADING = \"LOADING\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading,\r\n} from \"../../actions/searchActions\";\r\n\r\nexport class Search extends Component {\r\n  onChange = (e) => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"m-5\">\r\n        <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.onSubmit}>\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search for movies,tv shows\"\r\n            aria-label=\"Search\"\r\n            onChange={this.onChange}\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n  text: state.movies.text,\r\n  movies: state.movies.movies,\r\n});\r\n\r\nexport default connect(mapStatesToProps, {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading,\r\n})(Search);\r\n","import React from \"react\";\r\nimport wave from \"../wave.gif\";\r\n\r\nfunction spinner() {\r\n  return (\r\n    <div className=\"m-5\">\r\n      <img\r\n        src={wave}\r\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n        alt=\"Loading....\"\r\n      ></img>\r\n      <h3>Loading....</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default spinner;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    let data = (\r\n      <div className=\"mt-5 row \">\r\n        <div className=\"card \">\r\n          <img className=\"w-50 \" src={movie.Poster} alt=\"movie cover\"></img>\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">{movie.Title} </h4>\r\n            <p>The content type: {movie.Type}</p>\r\n            <p>The Year of developed: {movie.Year}</p>\r\n\r\n            <Link className=\"btn btn-primary\" to={\"/movie/\" + movie.imdbID}>\r\n              More\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    return <div>{data}</div>;\r\n  }\r\n}\r\n\r\nexport default connect()(MovieCard);\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Nodata extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-secondary m-5\">Sorry No Result matched....</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nodata;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Nodata from \"../layout/Nodata\";\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { flims } = this.props;\r\n\r\n    let content = flims ? (\r\n      flims.map((movie, index) => <MovieCard movie={movie} key={index} />)\r\n    ) : (\r\n      <Nodata />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">{content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  flims: state.movies.movies,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Search from \"./Search\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport MoviesContainer from \"./MoviesContainer\";\r\n\r\nexport class Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <Search />\r\n        {loading ? <Spinner /> : <MoviesContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.movies.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import {\r\n  SEARCH_MOVIE,\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  LOADING,\r\n} from \"../actions/types\";\r\n\r\nconst initState = {\r\n  text: \"\",\r\n  movies: [],\r\n  loading: false,\r\n  movie: [],\r\n};\r\n\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        loading: false,\r\n      };\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport searchReducer from \"./searchReducer\";\r\n\r\nexport default combineReducers({\r\n  movies: searchReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleWare = [thunk];\r\nconst initState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport Nodata from \"../layout/Nodata\";\r\nimport { fetchMovie, setLoading } from \"../../actions/searchActions\";\r\n\r\n// we can <React.Fragment>...........</React.Fragment>\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n    this.props.setLoading();\r\n  }\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n    let movieInfo = (\r\n      <div className=\"col m-4 row\">\r\n        <div className=\"card\">\r\n          <img src={movie.Poster} className=\"card-img-top\" alt=\"Poster\" />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{movie.Title}</h5>\r\n          <p>Description:{movie.Plot}</p>\r\n          <table className=\"table\">\r\n            <tr>\r\n              <th scope=\"col\">Year: {movie.Year}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">imdbRating: {movie.imdbRating}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Type: {movie.Type}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Language: {movie.Language}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Released: {movie.Released}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Actors: {movie.Actors}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Awards: {movie.Awards}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">BoxOffice: {movie.BoxOffice}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Country: {movie.Country}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">DVD: {movie.DVD}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Director: {movie.Director}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Genre: {movie.Genre}</th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"col\">Metascore: {movie.Metascore}</th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"col\">Production: {movie.Production}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Rated: {movie.Rated}</th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"col\">Runtime: {movie.Runtime}</th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"col\">Website: {movie.Website}</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">Writer: {movie.Writer}</th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"col\">imdbVotes: {movie.imdbVotes}</th>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    let data = movie ? movieInfo : <Nodata />;\r\n    let content = loading ? <Spinner /> : data;\r\n    return (\r\n      <div className=\"container  justify-content-center\">\r\n        {content}\r\n        <div>\r\n          <Link className=\"btn btn-secondary text-warning mb-5 ml-5\" to=\"/\">\r\n            Back To Search\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./component/nav\";\nimport Footer from \"./component/Footer\";\nimport Landing from \"./component/home/Landing\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Movie from \"./component/home/Movie\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/movie/:id\" component={Movie} />\n\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}