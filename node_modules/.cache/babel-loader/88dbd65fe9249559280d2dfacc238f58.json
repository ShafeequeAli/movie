{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alipili\\\\project\\\\movie-pro\\\\src\\\\component\\\\home\\\\MoviesContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MovieCard from \"./MovieCard\";\nimport Nodata from \"../layout/Nodata\";\nimport ResultTotal from \"../home/ResutsTotal\";\nexport class MoviesContainer extends Component {\n  render() {\n    const {\n      flims\n    } = this.props;\n    let content = \"\";\n    content = flims.Response === \"True\" ? flims.Search.map((movie, index) => /*#__PURE__*/React.createElement(MovieCard, {\n      movie: movie,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    })) : null;\n    let impression = \"\";\n\n    if (flims.Response === \"True\") {\n      impression = /*#__PURE__*/React.createElement(ResultTotal, {\n        result: flims.totalResults,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, impression), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, content));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  flims: state.movies.movies\n});\n\nexport default connect(mapStateToProps)(MoviesContainer);","map":{"version":3,"sources":["C:/Users/alipili/project/movie-pro/src/component/home/MoviesContainer.js"],"names":["React","Component","connect","MovieCard","Nodata","ResultTotal","MoviesContainer","render","flims","props","content","Response","Search","map","movie","index","impression","totalResults","mapStateToProps","state","movies"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAO,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAC7CM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,GACLF,KAAK,CAACG,QAAN,KAAmB,MAAnB,GACIH,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,kBACf,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAED,KAAlB;AAAyB,MAAA,GAAG,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ,GAII,IALN;AAMA,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAIR,KAAK,CAACG,QAAN,KAAmB,MAAvB,EAA+B;AAC7BK,MAAAA,UAAU,gBAAG,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAER,KAAK,CAACS,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AACD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,UAAvB,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBN,OAAtB,CAFF,CADF;AAMD;;AAtB4C;;AAyB/C,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaA;AADc,CAAZ,CAAxB;;AAIA,eAAelB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,eAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Nodata from \"../layout/Nodata\";\r\nimport ResultTotal from \"../home/ResutsTotal\";\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { flims } = this.props;\r\n\r\n    let content = \"\";\r\n    content =\r\n      flims.Response === \"True\"\r\n        ? flims.Search.map((movie, index) => (\r\n            <MovieCard movie={movie} key={index} />\r\n          ))\r\n        : null;\r\n    let impression = \"\";\r\n    if (flims.Response === \"True\") {\r\n      impression = <ResultTotal result={flims.totalResults} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"mt-5\">{impression}</div>\r\n        <div className=\"row\">{content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  flims: state.movies.movies,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n"]},"metadata":{},"sourceType":"module"}