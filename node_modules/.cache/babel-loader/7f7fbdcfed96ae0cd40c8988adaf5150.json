{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alipili\\\\project\\\\movie-pro\\\\src\\\\component\\\\home\\\\MoviesContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MovieCard from \"./MovieCard\";\nimport Spinner from \"../layout/Spinner\";\nexport class MoviesContainer extends Component {\n  render() {\n    const {\n      movies\n    } = this.props;\n    console.log(movies);\n    let content = \"\";\n    let aray = [movies.Search];\n    aray.map(movie => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        style: \"width: 18rem;\",\n        key: movie.imdbID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: movie.Poster,\n        className: \"card-img-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }\n      }, movie.Title, \".\", movie.Year), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      }, \"Our functionality is unparalleled, but our granular integrated, value-added convergence and easy use is invariably considered a remarkable achievement taking into account this month's\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, \"Go somewhere\"))));\n    }); // content =\n    //   movies.length > 0 ? (\n    //     movies.map((movie, index) => <MovieCard key={index} movie={movie} />)\n    //   ) : (\n    //     <Spinner />\n    //   );\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Total result is \", movies.totalResults), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"array of result is \")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  movies: state.movies.movies\n});\n\nexport default connect(mapStateToProps)(MoviesContainer);","map":{"version":3,"sources":["C:/Users/alipili/project/movie-pro/src/component/home/MoviesContainer.js"],"names":["React","Component","connect","MovieCard","Spinner","MoviesContainer","render","movies","props","console","log","content","aray","Search","map","movie","imdbID","Poster","Title","Year","totalResults","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAC7CK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKC,KAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,QAAII,OAAO,GAAG,EAAd;AACA,QAAIC,IAAI,GAAG,CAACL,MAAM,CAACM,MAAR,CAAX;AACAD,IAAAA,IAAI,CAACE,GAAL,CAAUC,KAAD,IAAW;AAClB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,eAA5B;AAA4C,QAAA,GAAG,EAAEA,KAAK,CAACC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,KAAK,CAACG,KADT,OACiBH,KAAK,CAACI,IADvB,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mMAJF,eAUE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,CAFF,CADF,CADF;AAqBD,KAtBD,EALO,CA6BP;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoBZ,MAAM,CAACa,YAA3B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF,CADF;AAQD;;AA7C4C;;AAgD/C,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCf,EAAAA,MAAM,EAAEe,KAAK,CAACf,MAAN,CAAaA;AADa,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACmB,eAAD,CAAP,CAAyBhB,eAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    console.log(movies);\r\n    let content = \"\";\r\n    let aray = [movies.Search];\r\n    aray.map((movie) => {\r\n      return (\r\n        <div>\r\n          <div className=\"card\" style=\"width: 18rem;\" key={movie.imdbID}>\r\n            <img src={movie.Poster} className=\"card-img-top\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">\r\n                {movie.Title}.{movie.Year}\r\n              </h5>\r\n              <p>\r\n                Our functionality is unparalleled, but our granular integrated,\r\n                value-added convergence and easy use is invariably considered a\r\n                remarkable achievement taking into account this month's\r\n              </p>\r\n\r\n              <a href=\"#\" className=\"btn btn-primary\">\r\n                Go somewhere\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    // content =\r\n    //   movies.length > 0 ? (\r\n    //     movies.map((movie, index) => <MovieCard key={index} movie={movie} />)\r\n    //   ) : (\r\n    //     <Spinner />\r\n    //   );\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <p>Total result is {movies.totalResults}</p>\r\n          <p>array of result is </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movies: state.movies.movies,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n"]},"metadata":{},"sourceType":"module"}