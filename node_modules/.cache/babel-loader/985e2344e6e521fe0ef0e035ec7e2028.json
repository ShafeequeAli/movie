{"ast":null,"code":"import{SEARCH_MOVIE,FETCH_MOVIES,FETCH_MOVIE,LOADING}from\"./types\";import{APIKey}from\"../../src/ApiKey\";import axios from\"axios\";export var searchMovie=function searchMovie(text){return function(dispatch){dispatch({type:SEARCH_MOVIE,payload:text});};};export var fetchMovies=function fetchMovies(text){return function(dispatch){axios.get(\"http://www.omdbapi.com/?apikey=\".concat(APIKey,\"&s=\").concat(text)).then(function(response){dispatch({type:FETCH_MOVIES,payload:response.data.Search});}).catch(function(err){return console.log(err);});};};export var fetchMovie=function fetchMovie(id){return function(dispatch){axios.get(\"http://www.omdbapi.com/?apikey=\".concat(APIKey,\"&i=\").concat(id)).then(function(response){dispatch({type:FETCH_MOVIE,payload:response.data});}).catch(function(err){return console.log(err);});};};export var setLoading=function setLoading(){return{type:LOADING};};","map":{"version":3,"sources":["C:/Users/alipili/project/movie-pro/src/actions/searchActions.js"],"names":["SEARCH_MOVIE","FETCH_MOVIES","FETCH_MOVIE","LOADING","APIKey","axios","searchMovie","text","dispatch","type","payload","fetchMovies","get","then","response","data","Search","catch","err","console","log","fetchMovie","id","setLoading"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,YAAvB,CAAqCC,WAArC,CAAkDC,OAAlD,KAAiE,SAAjE,CACA,OAASC,MAAT,KAAuB,kBAAvB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,QAAU,UAACC,QAAD,CAAc,CACjDA,QAAQ,CAAC,CACPC,IAAI,CAAET,YADC,CAEPU,OAAO,CAAEH,IAFF,CAAD,CAAR,CAID,CAL0B,EAApB,CAOP,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,IAAD,QAAU,UAACC,QAAD,CAAc,CACjDH,KAAK,CACFO,GADH,0CACyCR,MADzC,eACqDG,IADrD,GAEGM,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBN,QAAQ,CAAC,CACPC,IAAI,CAAER,YADC,CAEPS,OAAO,CAAEI,QAAQ,CAACC,IAAT,CAAcC,MAFhB,CAAD,CAAR,CAID,CAPH,EASGC,KATH,CASS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EATT,EAUD,CAX0B,EAApB,CAaP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,QAAQ,UAACd,QAAD,CAAc,CAC9CH,KAAK,CACFO,GADH,0CACyCR,MADzC,eACqDkB,EADrD,GAEGT,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBN,QAAQ,CAAC,CACPC,IAAI,CAAEP,WADC,CAEPQ,OAAO,CAAEI,QAAQ,CAACC,IAFX,CAAD,CAAR,CAID,CAPH,EASGE,KATH,CASS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EATT,EAUD,CAXyB,EAAnB,CAaP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,MAAO,CACLd,IAAI,CAAEN,OADD,CAAP,CAGD,CAJM","sourcesContent":["import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from \"./types\";\r\nimport { APIKey } from \"../../src/ApiKey\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const searchMovie = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const fetchMovies = (text) => (dispatch) => {\r\n  axios\r\n    .get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.data.Search,\r\n      });\r\n    })\r\n\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const fetchMovie = (id) => (dispatch) => {\r\n  axios\r\n    .get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: response.data,\r\n      });\r\n    })\r\n\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}